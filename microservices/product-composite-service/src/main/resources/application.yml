
# Configurations for Spring OpenAPI
springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  swagger-ui.enabled: true
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: com.jmb.microservices.composite.product
  pathsToMatch: /**

# Placeholders for Spring OpenAPI Configuration class.
api:
  common:
    version: 1.0.0
    title: Generic ecommerce microservices product
    description: A Generic ecommerce product based on a microservices architecture
    termsOfService: https://opensource.org/license/mit/
    license: MIT General License
    licenseUrl: https://opensource.org/license/mit/

    externalDocDesc: No Wiki Page yet!
    externalDocUrl: No Wiki Url yet!
    contact:
      name: Juan Marcos Bruno
      url: TBD
      email: juan.marcos.bruno@gmail.com

# Textual information for Interfaces documenting by using Spring OpenAPI, notes section shows the usage of 'markdown'

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  product-composite:

    get-composite-product:
      description: Returns a composite view of the specified product id
      notes: |
        
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        1. Reviews
        1. Recommendations
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
        
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        
        ## Product id 113
        200 - Ok, but no recommendations will be returned
        
        ## Product id 213
        200 - Ok, but no reviews will be returned
        
        ## Non numerical product id
        400 - A **Bad Request** error will be returned
        
        ## Product id 13
        404 - A **Not Found** error will be returned
        
        ## Negative product ids
        422 - An **Unprocessable Entity** error will be returned

server.port: 7004
server.error.include-message: always

app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

logging:
  level:
    root: INFO
    com.jmb: DEBUG

---
spring.config.activate.on-profile: docker

server.port: 8080

# The information on the services' names below is set in the [root_folder]/docker-compose.yml file.
app:
  product-service:
    host: product
    port: 8080
  recommendation-service:
    host: recommendation
    port: 8080
  review-service:
    host: review
    port: 8080