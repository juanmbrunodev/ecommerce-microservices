buildscript {
	ext {
		springBootVersion = '3.0.1'
		mapstructVersion = "1.5.3.Final"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.jmb.core.product'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 18

repositories {
	mavenCentral()
}


dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.projectlombok:lombok:1.18.24')
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	//MongoDB Spring Support
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	//For IDE Support.
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	//Testing Dependencies
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	//DB Interaction Testing Dependencies
	implementation platform('org.testcontainers:testcontainers-bom:1.17.6')
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.assertj:assertj-core:3.21.0'
	testImplementation 'org.testcontainers:mongodb'
}

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

allprojects {
	tasks.withType(Javadoc).all { enabled = false }
}

test {
	useJUnitPlatform()
}
